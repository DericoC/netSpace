<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit" xmlns:viewmodel="clr-namespace:NetSpace.ViewModel" xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
    xmlns:busyindicator="clr-namespace:Syncfusion.SfBusyIndicator.XForms;assembly=Syncfusion.SfBusyIndicator.XForms"
    x:DataType="viewmodel:AdminCreatePlaceViewModel"
    BackgroundColor="#F8F7F9"
    x:Class="NetSpace.View.AdminCreatePlaceView">
    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter"/>
            <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <NavigationPage.TitleView>
        <Label Text="Lugar" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Font="Bold,24" Margin="-30,0,0,0"/>
    </NavigationPage.TitleView>
    <ScrollView>
        <AbsoluteLayout VerticalOptions="Fill">
            <StackLayout Margin="20, 30, 20, 20" Spacing="0"
                     WidthRequest="{OnPlatform Default='-1', UWP='350'}">
                <AbsoluteLayout HorizontalOptions="Center" IsVisible="{Binding isCreate, Converter={StaticResource InvertedBoolConverter}}">
                    <StackLayout Margin="0,-10,0,10" x:Name="myStackImage">
                        <Frame CornerRadius="80" HeightRequest="160" WidthRequest="160" HorizontalOptions="Center" Padding="0" IsClippedToBounds="True">
                            <Image x:Name="image" Aspect="AspectFill" Source="{Binding place.image}"/>
                        </Frame>
                    </StackLayout>
                    <buttons:SfButton x:Name="SfButton" ShowIcon="True" CornerRadius="25" Clicked="OnPickPhotoButtonClicked" BackgroundColor="DimGray"
                                  HeightRequest="45" WidthRequest="45" AbsoluteLayout.LayoutFlags="PositionProportional" AbsoluteLayout.LayoutBounds="1,0.9,42,42">
                        <buttons:SfButton.ImageSource>
                            <FontImageSource
                            FontFamily="FASolid"
                            Glyph="&#x2b;"
                            Size="15" Color="White"/>
                        </buttons:SfButton.ImageSource>
                    </buttons:SfButton>
                </AbsoluteLayout>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.2*"/>
                        <RowDefinition Height="0.4*"/>
                        <RowDefinition Height="0.2*"/>
                    </Grid.RowDefinitions>
                    <inputLayout:SfTextInputLayout Grid.Row="0"
                Hint="Nombre"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <inputLayout:SfTextInputLayout.Triggers>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.place_name.Length}" 
                                 Value="0">
                                <Setter Property="ErrorText" Value="Nombre requerido"/>
                                <Setter Property="HasError" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.place_name, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="HasError" Value="False"/>
                            </DataTrigger>
                        </inputLayout:SfTextInputLayout.Triggers>
                        <Entry Text="{Binding place.place_name}" x:Name="txtNombre" />
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="1"
                Hint="Descripción"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <inputLayout:SfTextInputLayout.Triggers>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.description.Length}" 
                                 Value="0">
                                <Setter Property="ErrorText" Value="Descirpción requerida"/>
                                <Setter Property="HasError" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.description, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="HasError" Value="False"/>
                            </DataTrigger>
                        </inputLayout:SfTextInputLayout.Triggers>
                        <Entry Text="{Binding place.description}" x:Name="txtApellido"/>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="2"
                Hint="Dimensiones"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <inputLayout:SfTextInputLayout.Triggers>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.dimensions.Length}" 
                                 Value="0">
                                <Setter Property="ErrorText" Value="Dimensiones requeridas"/>
                                <Setter Property="HasError" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.dimensions, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="HasError" Value="False"/>
                            </DataTrigger>
                        </inputLayout:SfTextInputLayout.Triggers>
                        <Entry Text="{Binding place.dimensions}" x:Name="txtApellido2"/>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="3"
                Hint="Capacidad"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <inputLayout:SfTextInputLayout.Triggers>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.capacity}" 
                                 Value="0">
                                <Setter Property="ErrorText" Value="Capacidad requerida"/>
                                <Setter Property="HasError" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.capacity, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="HasError" Value="False"/>
                            </DataTrigger>
                        </inputLayout:SfTextInputLayout.Triggers>
                        <Entry Text="{Binding place.capacity}" x:Name="txtCorreo" Keyboard="Email"/>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="4"
                Hint="Amenidades"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <inputLayout:SfTextInputLayout.Triggers>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.amenities.Length}" 
                                 Value="0">
                                <Setter Property="ErrorText" Value="Amenidades requeridas"/>
                                <Setter Property="HasError" Value="True"/>
                            </DataTrigger>
                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.amenities, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="HasError" Value="False"/>
                            </DataTrigger>
                        </inputLayout:SfTextInputLayout.Triggers>
                        <Entry Text="{Binding place.amenities}" x:Name="txtTelefono"/>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="5"
                TrailingViewPosition="Inside"
                Hint="Encargado"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <Picker SelectedItem="{Binding place.manager, Mode=TwoWay}"
                            ItemsSource="{Binding managers}" ItemDisplayBinding="{Binding first_name}"/>
                        <inputLayout:SfTextInputLayout.TrailingView>
                            <Label Text="&#xf0d7;" FontFamily="FASolid" Margin="0,12,0,0"></Label>
                        </inputLayout:SfTextInputLayout.TrailingView>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="6"
                TrailingViewPosition="Inside"
                Hint="Politica"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                        <Picker SelectedItem="{Binding place.policy, Mode=TwoWay}"
                            ItemsSource="{Binding policies}" ItemDisplayBinding="{Binding policy_name}"/>
                        <inputLayout:SfTextInputLayout.TrailingView>
                            <Label Text="&#xf0d7;" FontFamily="FASolid" Margin="0,12,0,0"></Label>
                        </inputLayout:SfTextInputLayout.TrailingView>
                    </inputLayout:SfTextInputLayout>
                    <inputLayout:SfTextInputLayout Grid.Row="7"
                            TrailingViewPosition="Inside"
                            Hint="Tags"
                            ContainerType="Outlined"
                            OutlineCornerRadius="8">
                        <combobox:SfComboBox x:Name="tagsComboBox" DropDownItemHeight="50" DisplayMemberPath="name"
                              MultiSelectMode="Token" DataSource="{Binding tags, Mode=TwoWay}" SelectionChanged="tagsComboBox_SelectionChanged">
                            <combobox:SfComboBox.TokenSettings>
                                <combobox:TokenSettings FontSize="14" BackgroundColor="#9C9C9C" 
                                        TextColor="Color.White" SelectedBackgroundColor="#ffffe0" 
                                        DeleteButtonColor="Color.Black" IsCloseButtonVisible="true" 
                                        CornerRadius="15" DeleteButtonPlacement="Right">
                                </combobox:TokenSettings>
                            </combobox:SfComboBox.TokenSettings>
                        </combobox:SfComboBox>
                    </inputLayout:SfTextInputLayout>

                    <inputLayout:SfTextInputLayout Grid.Row="8"
                            TrailingViewPosition="Inside"
                            Hint="Hora Inicio"
                            ContainerType="Outlined"
                            OutlineCornerRadius="8">
                        <TimePicker Time="{Binding startPicker}" />
                    </inputLayout:SfTextInputLayout>

                    <inputLayout:SfTextInputLayout Grid.Row="9"
                            TrailingViewPosition="Inside"
                            Hint="Hora Final"
                            ContainerType="Outlined"
                            OutlineCornerRadius="8">
                        <TimePicker Time="{Binding endPicker}" />
                    </inputLayout:SfTextInputLayout>

                    <inputLayout:SfTextInputLayout Grid.Row="10"
                                TrailingViewPosition="Inside"
                                Hint="Frecuencia"
                                ContainerType="Outlined"
                                OutlineCornerRadius="8">
                        <Picker SelectedItem="{Binding config.frequency, Mode=TwoWay}"
                            ItemsSource="{Binding frequency}" ItemDisplayBinding="{Binding value}"/>
                        <inputLayout:SfTextInputLayout.TrailingView>
                            <Label Text="&#xf0d7;" FontFamily="FASolid" Margin="0,12,0,0"></Label>
                        </inputLayout:SfTextInputLayout.TrailingView>
                    </inputLayout:SfTextInputLayout>
                    <StackLayout Grid.Row="11" RadioButtonGroup.SelectedValue="{Binding place.restrooms}" RadioButtonGroup.GroupName="Restrooms">
                        <Label Text="¿Tiene baños?" />
                        <RadioButton Content="Sí" BackgroundColor="Transparent" Value="True"/>
                        <RadioButton Content="No" BackgroundColor="Transparent" Value="False"/>
                    </StackLayout>
                    <buttons:SfButton Text="Crear Lugar" CornerRadius="25" Padding="15" BackgroundColor="#333333"
                                  FontAttributes="Bold" Margin="0,10" Grid.Row="12" Command="{Binding CreatePlace}" IsVisible="{Binding isCreate}"/>
                    <buttons:SfButton Text="Guardar Lugar" CornerRadius="25" Padding="15" BackgroundColor="#333333"
                                  FontAttributes="Bold" Margin="0,10" Grid.Row="12" Command="{Binding SavePlace}" IsVisible="{Binding isCreate, Converter={StaticResource InvertedBoolConverter}}"/>
                </Grid>
            </StackLayout>
            <BoxView AbsoluteLayout.LayoutFlags="All" AbsoluteLayout.LayoutBounds="0,0,1,1"
                    BackgroundColor="Black" x:Name="box" IsVisible="{Binding isBusy}"
                    Opacity="0.6"
                    InputTransparent="false"/>
            <busyindicator:SfBusyIndicator x:Name="busyindicator" AbsoluteLayout.LayoutFlags="PositionProportional"
                                       AnimationType="SingleCircle" AbsoluteLayout.LayoutBounds=".5,.5,-1,-1"
                                       BackgroundColor="Transparent" IsBusy="{Binding isBusy}"
                                       TextColor="#1690F4" ViewBoxWidth="120"
                                       Duration="2.5"/>
        </AbsoluteLayout>
    </ScrollView>
</ContentPage>