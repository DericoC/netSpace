<?xml version="1.0" encoding="UTF-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    BackgroundColor="#F8F7F9"
    x:Class="NetSpace.View.AdminCreatePolicyView">

    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:IsNotNullOrEmptyConverter x:Key="IsNotNullOrEmptyConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <NavigationPage.TitleView>
        <Label Text="Politicas" HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Font="Bold,24" Margin="-25,0,0,0"/>
    </NavigationPage.TitleView>
        <StackLayout Margin="20, 30, 20, 20" Spacing="0"
                     WidthRequest="{OnPlatform Default='-1', UWP='350'}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.3*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <inputLayout:SfTextInputLayout Grid.Row="0"
                Hint="Nombre"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                    <inputLayout:SfTextInputLayout.Triggers>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.place_name.Length}" 
                                 Value="0">
                            <Setter Property="ErrorText" Value="Nombre requerido"/>
                            <Setter Property="HasError" Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.place_name, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                            <Setter Property="HasError" Value="False"/>
                        </DataTrigger>
                    </inputLayout:SfTextInputLayout.Triggers>
                    <Entry Text="{Binding place.place_name}" x:Name="txtNombre"/>
                </inputLayout:SfTextInputLayout>

                <StackLayout Grid.Row="1">
                    <Label Text="¿Existe relación de edad?" />
                    <RadioButton Content="Sí" BackgroundColor="Transparent"/>
                    <RadioButton Content="No" BackgroundColor="Transparent"/>
                </StackLayout>

                <inputLayout:SfTextInputLayout Grid.Row="2"
                Hint="Restricción de Edad"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                    <Picker SelectedItem="{Binding}" ItemDisplayBinding="{Binding}">
                        <Picker.Items>
                            <x:String>12</x:String>
                            <x:String>18</x:String>
                        </Picker.Items>
                    </Picker>
                </inputLayout:SfTextInputLayout>

                <inputLayout:SfTextInputLayout Grid.Row="3"
                Hint="Deposito"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                    <inputLayout:SfTextInputLayout.Triggers>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.capacity}" 
                                 Value="0">
                            <Setter Property="ErrorText" Value="Capacidad requerida"/>
                            <Setter Property="HasError" Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.capacity, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                            <Setter Property="HasError" Value="False"/>
                        </DataTrigger>
                    </inputLayout:SfTextInputLayout.Triggers>
                    <Entry Text="{Binding place.capacity}" x:Name="txtCapacidad"/>
                </inputLayout:SfTextInputLayout>

                <inputLayout:SfTextInputLayout Grid.Row="4"
                Hint="Precio"
                ContainerType="Outlined"
                OutlineCornerRadius="8">
                    <inputLayout:SfTextInputLayout.Triggers>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.amenities.Length}" 
                                 Value="0">
                            <Setter Property="ErrorText" Value="Amenidades requeridas"/>
                            <Setter Property="HasError" Value="True"/>
                        </DataTrigger>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" 
                                 Binding="{Binding place.amenities, Converter={StaticResource IsNotNullOrEmptyConverter}}" Value="True">
                            <Setter Property="HasError" Value="False"/>
                        </DataTrigger>
                    </inputLayout:SfTextInputLayout.Triggers>
                    <Entry Text="{Binding place.amenities}" x:Name="txtAmenidades"/>
                </inputLayout:SfTextInputLayout>
            </Grid>
            <buttons:SfButton Text="Crear Politica" CornerRadius="25" Padding="15" VerticalOptions="EndAndExpand"
                                  FontAttributes="Bold" Margin="0,10" Command="{Binding CreatePlace}"/>
        </StackLayout>
</ContentPage>
